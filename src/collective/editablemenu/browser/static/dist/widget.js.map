{
  "version": 3,
  "sources": [
    "js/widget.js"
  ],
  "names": [],
  "mappings
  "file": "widget.js",
  "sourcesContent": [
    "require(['jquery', 'pat-registry'], function($, Registry) {\n  $(function() {\n    // I thought these could have been useful, but actually they look\n    // like they are not. I'm leaving these here for now, just in case...\n    //\n    // function checkMenuItem(item) {\n    //   return (\n    //     typeof item === 'object' &&\n    //     item.hasOwnProperty('additional_columns') &&\n    //     item.hasOwnProperty('condition') &&\n    //     item.hasOwnProperty('navigation_folder') &&\n    //     item.hasOwnProperty('simple_link') &&\n    //     item.hasOwnProperty('tab_title')\n    //   );\n    // }\n\n    // function addMenuItem(menu, item) {\n    //   if (!menu || typeof menu !== 'string' || !checkMenuItem(item)) {\n    //     return;\n    //   }\n    //   var json_settings = $('#form-widgets-menu_tabs_json').text();\n    //   var settings;\n    //   try {\n    //     settings = JSON.parse(json_settings);\n    //   } catch (e) {\n    //     settings = {};\n    //   }\n    //   if (!settings.hasOwnProperty(menu)) {\n    //     settings[menu] = [];\n    //   }\n    //   settings[menu].push(item);\n    //   $('#form-widgets-menu_tabs_json').text(JSON.stringify(settings));\n    // }\n\n    function handleSave() {\n      var settings = {};\n      $('.custom-settings-editor fieldset.autotoc-section').each(function() {\n        var $section = $(this);\n        var section_name = $section.find('.tab-content > label > input').val();\n        if (section_name) {\n          settings[section_name] = [];\n          $section.find('.menu-configuration > ul > li').each(function() {\n            var $item = $(this);\n            settings[section_name].push({\n              navigation_folder: $item.find('input[name^=\"navfolder\"]').val(),\n              simple_link: $item.find('input[name^=\"simple\"]').val(),\n              tab_title: $item.find('input[name^=\"title\"]').val(),\n              additional_columns: $item.find('input[name^=\"additional\"]').val(),\n              condition: $item.find('input[name^=\"condition\"]').val(),\n            });\n          });\n        }\n      });\n      $('#form-widgets-menu_tabs_json').text(JSON.stringify(settings));\n    }\n    $('#form-buttons-save').click(handleSave);\n\n    function titleUpdated(evt) {\n      $(evt.target)\n        .closest('.panel')\n        .find('.panel-heading span')\n        .text(evt.target.value);\n    }\n    $('.custom-settings-editor').on(\n      'keyup',\n      'input[name^=\"title\"]',\n      titleUpdated\n    );\n\n    function findNextNewIndex() {\n      var found = false;\n      var index = 0;\n      while (!found) {\n        if ($('#heading-new-'.concat(index)).length) {\n          index = index + 1;\n        } else {\n          found = true;\n        }\n      }\n      return index;\n    }\n\n    function craftNewMenuItem() {\n      var index = findNextNewIndex();\n      var item = $('#panel-group-template > div').clone(true);\n      item\n        .find('#heading-new a')\n        .attr('href', '#collapse-new-'.concat(index))\n        .attr('aria-controls', 'collapse-new-'.concat(index));\n      item.find('#heading-new').attr('id', 'heading-new-'.concat(index));\n      item\n        .find('#collapse-new')\n        .attr('aria-labelledby', 'heading-new-'.concat(index))\n        .attr('id', 'collapse-new-'.concat(index));\n      item\n        .find('input[name^=\"title-new\"]')\n        .attr('name', 'title-new-'.concat(index));\n      item\n        .find('input[name^=\"navfolder-new\"]')\n        .attr('name', 'navfolder-new-'.concat(index));\n      item\n        .find('input[name^=\"additional-new\"]')\n        .attr('name', 'additional-new-'.concat(index));\n      item\n        .find('input[name^=\"simple-new\"]')\n        .attr('name', 'simple-new-'.concat(index));\n      item\n        .find('input[name^=\"condition-new\"]')\n        .attr('name', 'condition-new-'.concat(index));\n      return $('<li></li>').append(item);\n    }\n\n    function addItemButtonClick(evt) {\n      evt.preventDefault();\n      var new_item = craftNewMenuItem();\n      $('.autotoc-section.active ul').append(new_item);\n    }\n    $('#add-menu-item-button').click(addItemButtonClick);\n\n    function removeItem(evt) {\n      evt.preventDefault();\n      $(evt.target)\n        .closest('li')\n        .remove();\n    }\n    $('.custom-settings-editor').on('click', '.remove-item-button', removeItem);\n  });\n});\n\ndefine(\"js/widget.js\", function(){});\n\n"
  ]
}